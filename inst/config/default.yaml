---
title: "default"


# scope and resolution ---------------------------------------------------------

### time steps ###
# stocks are given at the timestep, flows in the period until the timestep
periods: [2000, 2005, 2010, 2015, 2020, 2025, 2030, 2035, 2040, 2045, 2050,
          2055, 2060, 2070, 2080, 2090, 2100, 2110, 2130, 2150]

### start year ###
# first free time step
# there has to be at least one time step before to start from known stock
startyear: 2005

### end year ###
# later time steps are not shown in plots
# no impact on results
endyear: 2100

### region mapping ###
# file that maps countries to modelled regions
  # []: country-level resolution
  # [path]: file path to regionmapping
  # [name, where]: regionmapping via toolGetMapping
regionmapping: []

### regions ###
# list of region codes
# used only select specific regions from a mapping
  # NULL: all regions from mapping
regions: NULL

### ignore building shell ###
# ignore differences in building shells and only differentiate heating systems
# Building shell efficiency is still different depending on region, vintage,
#  location, etc. but cannot be changed through renovation. There is just one
#  building shell efficiency for new construction.
# reduced problem
  # TRUE
  # FALSE
ignoreShell: FALSE

### reporting template ###
# alternative reporting mapping
# There has to be a mapping in the package reportbrick named with the same
#  suffix: brickSets_<reportingTemplate>.yaml
  # NULL: default reporting
  # onlyRes: default reporting without commercial buildings
  # ignoreShell_onlyRes: ignore building shell + no commercial buildings
reportingTemplate: onlyRes

### historic run ###
# run to consider as history before startyear
  # NULL: no history before this run
  # <file path>: either directory of model run or path of specific gdx file
  # <scenario name>: pick most recent run with this name in output folder
historic: NULL


# slurm settings ---------------------------------------------------------------

### slurm quality of service (= QOS)
slurmQOS: NULL

### tasks per node
tasksPerNode: NULL

### Whether to use a node with up to 32 tasks
tasks32: FALSE

# data -------------------------------------------------------------------------

### input data revision ###
inputRevision: "0.6"

### force download ###
# force the model to download new input data even though it seems unchanged
  # TRUE
  # FALSE
forceDownload: FALSE

### starting point ###
# path to previous model run to use as initial starting point
startingPoint: NULL

### mathcing run ###
# path to matching run
# only for calibration
# TODO: to be removed when migrating to mredgebuidlings
matchingRun: NULL


# solvers ----------------------------------------------------------------------

gamsCall:  gams
solverLP:  cplex
solverNLP: conopt4
solverQCP: conopt4


# switches ---------------------------------------------------------------------

## input switches ====

### population scenario ###
  # SSP1 - SSP5
  # SSP2EU
  # SDP_EI, SDP_MC, SDP_RC
popScenario: SSP2EU

### floor space scenario ###
# scenario for the floor space per capita
# currently taken from EDGE-B
  # SSP1 - SSP5
  # SSP2EU
  # SDP_EI, SDP_MC, SDP_RC
fsScenario: SSP2EU

### ban heating systems ###
# named list with last period of allowed installation
  # e.g. {renovation: {sobo: 2025, libo: 2030}, construction: {libo: 2035}}
boilerBan: []

### carbon price ###
# named list with carbon price in USD/t_CO2
  # e.g. {2022: 0, 2030: 300, 2050: 500}
carbonPrice: []

### shift of heating system life time ###
# named list with the shift in the Weibull scale parameter in yr
  # e.g. {sobo: 3, libo: 2}
ltHsShift: []

### carrier prices ###
# scenario of future energy carrier prices
  # low:     low estimates
  # central: central estimates
  # high:    high estimates
carrierPrices: central

### carrier emission intensity ###
# scenario of future energy carrier emission intensity
# all combustion fuels assumed constant
# TODO: parameterise supply decarbonisation in config
  # low:     decarbonised electricity after 2035, district heat after 2045
  # central: decarbonise electricity to 10% and district heat to 20% of todays
  #          intensity until 2050
  # high:    emission intensities remain at current levels
carrierEmi: high


## model switches ====
# passed to gams

switches:

  ### type of model run ###
    # scenario:    run of future scenario
    # calibration: calibration to historic stock
    # matching:    matching historic stocks and flows to sources
  RUNTYPE: scenario

  ### optimisation problems to solve ###
  # solving an LP first can help to start from a good initial point
    # lp:    linear problem (incomplete)
    # nlp:   non-linear problem
    # lpnlp: first lp then start nlp from there
  SOLVEPROBLEM: lpnlp

  ### Parallel solving ###
  # parallel solving of nlp for each subs
    # TRUE
    # FALSE
  PARALLEL: TRUE

  ### Early demolition ###
  # allow demolition of buildings before end of life time
    # TRUE
    # FALSE
  EARLYDEMOLITION: FALSE

  ### Filter Stock subsets ###
  # select specific stock subset
  # reduced problem
    # FALSE: no filtering, consider all subsets
    # e.g.: DEU.urban.MFH.all
  FILTERSUBS: FALSE


# gams parameters --------------------------------------------------------------
# passed to gams

gamsOptions:

  ### log file option ###
    # 2: log output to log file
  logoption: 2

  ### page width ###
    # page width of log file (max number of characters in one line)
  pw: 185


# model parameters ------------------------------------------------------------
# modify specific model parameters

### price sensitivity HS
  # Numeric value of the price sensitivity of heating systems
priceSensHS:
  construction: 0.1
  renovation: 0.08

# cost modification
costMod:

  ### cost type(s) to be modified
    # construction: construction investment costs
    # renovation: renovation investment costs
    # carrier: carrier costs
  costType: NULL

  ### scaling factor
    # numeric value of the cost scaling factor (or the new cost value)
  scale: 1

  ### method to modify the costs
    # scale: scale all costs by the given scaling factor
    # scale_constant: fix costs to their t0 value scaled by the scaling factor
    # value: set (tangible) costs to the value of the scaling factor
  method: NULL

  ### heating system whose costs should be modified
    # one of the heating systems given in heatingSystem.csv
  hs: NULL
...
