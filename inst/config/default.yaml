---
title: "default"


# scope and resolution ---------------------------------------------------------

### time steps ###
# stocks are given at the timestep, flows in the period until the timestep
periods: [2000, 2005, 2010, 2015, 2020, 2025, 2030, 2035, 2040, 2045, 2050,
          2055, 2060, 2070, 2080, 2090, 2100, 2110, 2130, 2150]

### start year ###
# first free time step
# there has to be at least one time step before to start from known stock
startyear: 2005

### end year ###
# later time steps are not shown in plots
# no impact on results
endyear: 2100

### calibration periods ###
# time steps on which to conduct the calibration
calibperiods: NULL

### region mapping ###
# file that maps countries to modelled regions
  # []: country-level resolution
  # [path]: file path to regionmapping
  # [name, where]: regionmapping via toolGetMapping
regionmapping: []

### regions ###
# list of region codes
# used only select specific regions from a mapping
  # NULL: all regions from mapping
regions: NULL

### ignore building shell ###
# ignore differences in building shells and only differentiate heating systems
# Building shell efficiency is still different depending on region, vintage,
#  location, etc. but cannot be changed through renovation. There is just one
#  building shell efficiency for new construction.
# reduced problem
  # TRUE
  # FALSE
ignoreShell: FALSE

### Create minimal version with reduced run time ###
minimal: FALSE

### calibration ###
# intangible cost assumption files
# paths to csv files with assumptions on the intangible cost for construction
#  and renovation.
  # []: default files stored internally in inst/assump/
  # {con: 'path/to/file1.csv', ren: 'path/to/file2.csv'}
intangCostFiles: []

### reporting template ###
# alternative reporting mapping
# There has to be a mapping in the package reportbrick named with the same
#  suffix: brickSets_<reportingTemplate>.yaml
  # NULL: default reporting
  # onlyRes: default reporting without commercial buildings
  # ignoreShell_onlyRes: ignore building shell + no commercial buildings
reportingTemplate: onlyRes

### historic run ###
# run to consider as history before startyear
  # NULL: no history before this run
  # <file path>: either directory of model run or path of specific gdx file
  # <scenario name>: pick most recent run with this name in output folder
historic: NULL


# slurm settings ---------------------------------------------------------------

### slurm quality of service (= QOS)
slurmQOS: NULL

### tasks per node
tasksPerNode: NULL

### Whether to use a node with up to 32 tasks
tasks32: FALSE

# data -------------------------------------------------------------------------

### input data revision ###
inputRevision: "0.8"

### force download ###
# force the model to download new input data even though it seems unchanged
  # TRUE
  # FALSE
forceDownload: FALSE

### starting point ###
# path to previous model run to use as initial starting point
startingPoint: NULL

### mathcing run ###
# path to matching run
# only for calibration
# TODO: to be removed when migrating to mredgebuidlings
matchingRun: NULL

### calibration data ###
# path to gdx with calibration data
calibGdx: NULL

# solvers ----------------------------------------------------------------------

gamsCall:  gams
solverLP:  cplex
solverNLP: conopt4
solverQCP: conopt4


# switches ---------------------------------------------------------------------

## input switches ====

### population scenario ###
  # SSP1 - SSP5
  # SSP2EU
  # SDP_EI, SDP_MC, SDP_RC
popScenario: SSP2EU

### floor space scenario ###
# scenario for the floor space per capita
# currently taken from EDGE-B
  # SSP1 - SSP5
  # SSP2EU
  # SDP_EI, SDP_MC, SDP_RC
fsScenario: SSP2EU

### ban heating systems ###
# named list with last period of allowed installation
  # e.g. {renovation: {sobo: 2025, libo: 2030}, construction: {libo: 2035}}
boilerBan: []

### carbon price ###
# named list with carbon price in USD/t_CO2
  # e.g. {2022: 0, 2030: 300, 2050: 500}
carbonPrice: []

### shift of heating system life time ###
# named list with the shift in the Weibull scale parameter in yr
  # e.g. {sobo: 3, libo: 2}
ltHsShift: []

### carrier prices ###
# scenario of future energy carrier prices
  # low:     low estimates
  # central: central estimates
  # high:    high estimates
carrierPrices: central

### carrier emission intensity ###
# scenario of future energy carrier emission intensity
# all combustion fuels assumed constant
# TODO: parameterise supply decarbonisation in config
  # low:     decarbonised electricity after 2035, district heat after 2045
  # central: decarbonise electricity to 10% and district heat to 20% of todays
  #          intensity until 2050
  # high:    emission intensities remain at current levels
carrierEmi: high


## model switches ====
# passed to gams

switches:

  ### type of model run ###
    # scenario:    run of future scenario
    # calibration: calibration to historic stock
    # matching:    matching historic stocks and flows to sources
  RUNTYPE: scenario

  ### optimisation problems to solve ###
  # solving an LP first can help to start from a good initial point
    # lp:    linear problem (incomplete)
    # nlp:   non-linear problem
    # lpnlp: first lp then start nlp from there
    # auto:  nlp if startingPoint is set, else lpnlp
  SOLVEPROBLEM: lpnlp

  ### Parallel solving ###
  # parallel solving of nlp for each subs
    # TRUE
    # FALSE
  PARALLEL: TRUE

  ### Early demolition ###
  # allow demolition of buildings before end of life time
    # TRUE
    # FALSE
  EARLYDEMOLITION: FALSE

  ### Filter Stock subsets ###
  # select specific stock subset
  # reduced problem
    # FALSE: no filtering, consider all subsets
    # e.g.: DEU.urban.MFH.all
  FILTERSUBS: FALSE

  ### Calibration type ###
  # Calibration on which quantity?
    # stocks
    # stockszero
    # flows
    # aggregate (for simple calibration)
    # detailed (for simple calibration)
  CALIBRATIONTYPE: NULL

  ### Calibration resolution ###
  # Whether to aggregate previous state in simple calibration
    # aggregate
    # detailed
    # identicalRep
  CALIBRATIONRESOLUTION: detailed

  ### Calibration input ###
  # Input source for the calibration target; probably deleted in the future
    # data: Data computed from cs4r files
    # file: Data from a given gdx input file
    # randomCost: costs are randomized
    # randomTarget: target is randomized
  CALIBRATIONINPUT: data

  ### Artificial (and extreme) increase of CAPEX ###
  # Pass the HS that should have increased CAPEX
  CALIBRATIONHICAP: no

    ### Artificial (and extreme) decrease of OPEX ###
  # Pass the HS that should have decreased OPEX
  CALIBRATIONLOWOP: FALSE

  ### Target function ###
  # Target function of the calibration
    # minsquare
    # maxlikely
  TARGETFUNCTION: NULL

  ### Calibration step ###
  # Pass how the calibration step size should be determined
    # constant: Constant step size passed via p_alphaL.
    # priceSensHs: Take the respective lambda as the step size
    # adaptive: Use the adaptive step size method. Not yet available for simple calibration
  CALIBRATIONSTEP: constant

  ### Calibration of price sensitivity
  # Switch to control whether first price sensitivity is calibrated
    # NORMAL: Price sensitivity calibration following the general calibration approach
    # SIMPLE: Use calibration framework to compute Brick results with varying sensitivity
    # FALSE: Do not calibrate the price sensitivity
  CALIBRATEPRICESENS: FALSE

  ### Aggregate vintages
  # Switch to control whether renovation flows are aggregated across vintages in calibration
  AGGREGATEVIN: FALSE


# gams parameters --------------------------------------------------------------
# passed to gams

gamsOptions:

  ### log file option ###
    # 2: log output to log file
  logoption: 2

  ### page width ###
    # page width of log file (max number of characters in one line)
  pw: 185

# additional parameters e.g. for calibration -----------------------------------

parameters: []
...
